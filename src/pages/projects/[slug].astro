---
import Layout from "../../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

type project = CollectionEntry<"projects"> & {
  render: () => Promise<{ Content: any; Headings: any[] }>;
} & { slug: string };

export const getStaticPaths = async () => {
  const projectEntries: project[] = await getCollection("projects");

  return projectEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
};

interface Props {
  entry: project;
}

const { entry } = Astro.props;
const { Content, Headings } = await entry.render();
---

<Layout>
  <div class="max-w-4xl mx-auto p-6">
    <h1 class="text-4xl font-bold text-amber-50 mb-2">{entry.data.title}</h1>
    <p class="text-lg text-amber-100 mb-6">{entry.data.description}</p>

    <img
      src={`/assets/${entry.data.imagen}`}
      alt={entry.data.title}
      class="w-full max-h-80 object-cover rounded-lg shadow-md mb-8"
    />

    <!-- Renderiza el contenido del Markdown -->
    <div
      class="prose prose-orange lg:prose-lg max-w-none p-6 shadow-lg rounded-lg"
    >
      <Content />
    </div>

    <!-- ImÃ¡genes del proyecto -->
    <div class="">
      <h2 class="text-2xl font-semibold text-gray-700 mt-10">
        Fotos del proyecto
      </h2>
      <div class="grid grid-cols-2 gap-4">
        {
          entry.data.imagenes.map((imagen: any) => (
            <img
              src={imagen}
              alt={entry.data.title}
              class="w-full h-50 object-cover rounded-lg shadow-md"
            />
          ))
        }
      </div>
    </div>
  </div>
</Layout>
